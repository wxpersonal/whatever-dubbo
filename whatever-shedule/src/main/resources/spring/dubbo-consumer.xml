<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        ">

<!--	<beans xmlns="http://www.springframework.org/schema/beans"
		   xmlns:context="http://www.springframework.org/schema/context"
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd">-->

    <dubbo:application name="whatever-consumer"/>

    <!-- 关闭所有服务的启动时检查,可把服务端与客户端同一端口启动 -->
	<!--<dubbo:consumer check="false" registry="consumer"/>-->

	<!-- 使用zookeeper注册中心暴露服务地址 -->
	<!-- 其中register="false" subscribe="false"表示既不在zookeeper注册中心注册服务，也不订阅服务，仅用于测试，不需要启动zookeeper -->
	<!-- 部署时把register="false" subscribe="false"去掉或者改为true -->
	<dubbo:registry id="registry" protocol="${dubbo.registry.protocol}"  address="${dubbo.registry.address}" register="${dubbo.registry.register}" subscribe="${dubbo.registry.subscribe}"/>
	<!-- 生成远程服务代理，可以像使用本地bean一样使用demoService,url表示直连服务端,仅用于测试 -->
	<!--<dubbo:reference id="userService" url="${dubbo.commonserver.url}" interface="com.wx.whatever.service.IUserService" />-->
	<dubbo:reference id="userService"  interface="com.wx.whatever.service.IUserService" />


</beans>